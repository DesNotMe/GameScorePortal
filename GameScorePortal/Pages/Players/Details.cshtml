@page
@model GameScorePortal.Pages.Players.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

@if (Model.Player != null)
{
    <div>
        <h4>Player</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Player.LastName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Player.LastName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Player.FirstName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Player.FirstName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Player.JoinDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Player.JoinDate)
            </dd>
        </dl>
    </div>

    <div>
        <h4>GameScores</h4>
        @if (Model.Player.GameScores != null && Model.Player.GameScores.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Game</th>
                        <th>Score</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Player.GameScores)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Game.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.Score)</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No scores available.</p>
        }
    </div>

    <div>
        <a asp-page="./Edit" asp-route-id="@Model.Player.PlayerId">Edit</a> |
        <a asp-page="./Index">Back to List</a>
    </div>
}
else
{
    <p>Player not found.</p>
}
